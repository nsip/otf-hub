# 
# takes assessment results published by a reader and passes
# them through the alignment to NNLP services
# 
# writes resulting files both to audit output (folder)
# and on as messages to the next nats streaming q. for 
# pickup by the levelling workflow
# 
http:
  address: 0.0.0.0:34195
  read_timeout: 5s
  root_path: /benthos
  debug_endpoints: false
  
  
input:
  type: nats_stream
  nats_stream:
    ack_wait: 30s
    batching:
      byte_size: 0
      condition:
        type: static
        static: false
      count: 1
      period: ""
      processors: []
    client_id: otf_align_benthos_client
    cluster_id: test-cluster
    durable_name: #benthos_offset
    max_inflight: 1024
    queue: #benthos_queue
    start_from_oldest: true
    subject: otf.ingest
    unsubscribe_on_close: false
    urls:
      - nats://${NATS_HOST}:4222

pipeline:
  processors:
  - process_dag:

      brightpath_composite_token:
          conditions:
            - bloblang: original.score.type() != "null" # ignore students with null score
          premap: {}
          processors:
            - bloblang: |
                root = this
                meta.compToken = "%s %v".format(original.test.scale, original.score)
          postmap: 
            otf.compToken: meta.compToken

      brightpath_align:
          conditions:
            - bloblang: original.score.type() != "null" # ignore students with null score
          premap:
            alignMethod: meta.alignMethod
            alignCapability: meta.capability
            alignToken: otf.compToken
          processors:
            - http:
                parallel: false
                request:
                  url: http://${ALIGNER_HOST}:1324/align
                  headers:
                    Content-Type: application/json
                  verb: POST
          postmap:
            otf.align.method: alignMethod
            otf.align.token: alignToken
            otf.align.alignments: alignments
            otf.align.alignmentServiceID: alignServiceID
            otf.align.alignmentServiceName: alignServiceName
            otf.align.capability: alignCapability

      brightpath_map:
        dependencies:
          - otf.align.token # ensures align service has been called first
        conditions:
          - bloblang: this.meta.providerName == "BrightPath" # ensure is a brightpath record
        processors:
          - bloblang: |
              root = this
              otf.id.studentID = original.student_participation.enrolment.student.identifiers.0.identifier
              otf.id.studentGivenName = original.student_participation.enrolment.student.first_name
              otf.id.studentFamilyName = original.student_participation.enrolment.student.last_name

      lpofa_align:
          premap:
            alignMethod: meta.alignMethod
            alignCapability: meta.capability
            alignToken: original.object.definition.description.en-US
          processors:
            - http:
                parallel: false 
                request:
                  url: http://${ALIGNER_HOST}:1324/align
                  headers:
                    Content-Type: application/json
                  verb: POST
          postmap:
            otf.align.method: alignMethod
            otf.align.token: alignToken
            otf.align.alignments: alignments
            otf.align.alignmentServiceID: alignServiceID
            otf.align.alignmentServiceName: alignServiceName
            otf.align.capability: alignCapability

      lpofa_map:
        dependencies:
          - otf.align.token # ensures align service has been called first
        conditions:
          - bloblang: this.exists("original.actor.mbox") # xapi files only
        processors:
          - bloblang: |
              root = this
              otf.id.studentID = original.actor.mbox
              otf.id.studentFullName = original.actor.name

      mathspathway_align:
          premap:
            alignMethod: meta.alignMethod
            alignCapability: meta.capability
            alignToken: original.module_id
          processors:
            - http:
                parallel: false
                request:
                  url: http://${ALIGNER_HOST}:1324/align
                  headers:
                    Content-Type: application/json
                  verb: POST
          postmap:
            otf.align.method: alignMethod
            otf.align.token: alignToken
            otf.align.alignments: alignments
            otf.align.alignmentServiceID: alignServiceID
            otf.align.alignmentServiceName: alignServiceName
            otf.align.capability: alignCapability

      mathspathway_map:
        dependencies:
          - otf.align.token # ensures align service has been called first
        conditions:
          - bloblang: this.meta.providerName == "MathsPathway" # ensure is a mathspathway record
        processors:
          - bloblang: |
              root = this
              otf.id.studentID = original.student_id
              otf.id.studentFullName = "not provided"

      spa_align:
          premap:
            alignMethod: meta.alignMethod
            alignCapability: meta.capability
            alignToken: original.TestCode
          processors:
            - http:
                parallel: false
                request:
                  url: http://${ALIGNER_HOST}:1324/align
                  headers:
                    Content-Type: application/json
                  verb: POST
          postmap:
            otf.align.method: alignMethod
            otf.align.token: alignToken
            otf.align.alignments: alignments
            otf.align.alignmentServiceID: alignServiceID
            otf.align.alignmentServiceName: alignServiceName
            otf.align.capability: alignCapability

      spa_map:
        dependencies:
          - otf.align.token # ensures align service has been called first
        conditions:
          - bloblang: this.meta.providerName == "SPA" # ensure is a sreams record
        processors:
          - bloblang: |
              root = this
              otf.id.studentID = original.StudentID
              otf.id.studentGivenName = original.FirstName
              otf.id.studentFamilyName = original.LastName
  
  - catch:
    - log:
        message: "Processing failed due to: ${!error()}"


output:
  broker:
    pattern: fan_out
    outputs:
      - files:
          path: ${PDM_ROOT}/audit/align/${!count("files")}-${!timestamp_unix_nano()}.json
      - nats_stream:
          urls:
            - nats://${NATS_HOST}:4222
          cluster_id: test-cluster
          subject: otf.aligned
          client_id: otf_aligned_publish
      # max_in_flight: 1
  processors:
    # don't save any files that did not get processed by the aligner
  - bloblang: |
      root = if !this.exists("otf.align.token") {
        deleted()
      }    







